clear all;
close all;
load('berMat.mat')
%function [demod_vec] = qam_experiment()
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
ber_tot = [];
%for k = 20:-1:-5
Nq = 2;
M = 2^Nq;
L = 100000; %%% length of randome sequence
rand_seq = randi([0, 1], L*log2(M),1);
mapping = 'bin';
UnitAveragePower = true;
SNR = 20;
%%%%%%%%%%%% Transmitter TX %%%%%%%%%%%%%%
mod_vec = qam_mod_2(Nq,rand_seq,mapping,UnitAveragePower);
%%%%%%%%%%% Channel -> AWGN %%%%%%%%%%%%%
noisy_mod_vec = awgn(mod_vec, SNR,'measured');
scatterplot(noisy_mod_vec);
%%%%%%%%%%% Receiver RX %%%%%%%%%%%%%
demod_vec = qam_demod(noisy_mod_vec,Nq,mapping,UnitAveragePower);
%%%%%%%%%% BIT ERROR RATE COMPUTATION %%%%%%%%%%%%%
[ber_k] = ber(rand_seq,demod_vec);
%end
%end
k = (20:-1:-5)*2;
X1 = k';
YMatrix1 = berMat;

%CREATEFIGURE(X1, YMatrix1)
%  X1:  vector of x data
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 22-Nov-2017 15:19:35

% Create figure
figure1 = figure('Tag','QAMConstellation');

% Create axes
axes1 = axes('Parent',figure1);
hold(axes1,'on');

% Create multiple lines using matrix input to semilogy
semilogy1 = semilogy(X1,YMatrix1,'Marker','o','LineWidth',2,'Parent',axes1);
set(semilogy1(1),'DisplayName','BPSK');
set(semilogy1(2),'DisplayName','4-QAM');
set(semilogy1(3),'DisplayName','8-QAM');
set(semilogy1(4),'DisplayName','16-QAM');
set(semilogy1(5),'DisplayName','32-QAM');
set(semilogy1(6),'DisplayName','64-QAM');

% Create ylabel
ylabel('Bit Error Rate (%)');

% Create xlabel
xlabel('SNR (dB)');
% Uncomment the following line to preserve the Y-limits of the axes
ylim(axes1,[0.0005 1]);
box(axes1,'on');
% Set the remaining axes properties
set(axes1,'FontSize',16,'XGrid','on','YGrid','on','YMinorTick','on',...
    'YScale','log');
% Create legend
legend1 = legend(axes1,'show');
set(legend1,...
    'Position',[0.789502164502164 0.615157799761126 0.103354978354978 0.283715012722646]);
